composer create-project --prefer-dist laravel/laravel chat-app

- cd chat-app

composer require beyondcode/laravel-websockets

php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider"

Set Up WebSocket Configuration

Update config/websockets.php as needed. You can usually use the default settings, but ensure you configure the apps array with your applicationâ€™s credentials:

'apps' => [
    [
        'id' => env('PUSHER_APP_ID'),
        'name' => env('APP_NAME'),
        'key' => env('PUSHER_APP_KEY'),
        'secret' => env('PUSHER_APP_SECRET'),
        'path' => env('PUSHER_APP_PATH'),
        'capacity' => null,
    ],
],

Configure Broadcasting

Update your .env file to use WebSockets:

env

BROADCAST_DRIVER=redis
CACHE_DRIVER=file
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
And in config/broadcasting.php, configure the pusher driver:


'connections' => [
    'pusher' => [
        'driver' => 'pusher',
        'key' => env('PUSHER_APP_KEY'),
        'secret' => env('PUSHER_APP_SECRET'),
        'app_id' => env('PUSHER_APP_ID'),
        'options' => [
            'cluster' => env('PUSHER_APP_CLUSTER'),
            'useTLS' => true,
            'host' => env('PUSHER_APP_HOST', 'localhost'),
            'port' => env('PUSHER_APP_PORT', 6001),
            'scheme' => env('PUSHER_APP_SCHEME', 'http'),
        ],
    ],
],

php artisan websockets:serve

npm install --save laravel-echo socket.io-client

npm install vue@^3.0.0 vue-router@^4.0.0 axios

composer require doctrine/dbal

composer show doctrine/dbal

php artisan migrate

php artisan make:event MessageSent

npm install vue-loader@next vue-template-compiler --save-dev

npm install postcss-import postcss-nested autoprefixer --save-dev

npm install --save laravel-echo socket.io-client

https://kanhasoft.com/blog/real-time-web-applications-with-laravel-websockets-a-step-by-step-tutorial/